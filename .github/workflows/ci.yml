name: CI

on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: viralclip
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/viralclip
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r apps/api/requirements.txt
          pip install -r apps/workers/requirements.txt

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install UI dependencies
        run: npm --prefix apps/ui ci

      - name: Compile API modules
        run: python -m compileall apps/api/app

      - name: Compile worker modules
        run: python -m compileall apps/workers/workers

      - name: Build frontend
        run: npm --prefix apps/ui run build

      - name: Run media QA baseline
        run: python -m apps.workers.workers.qa.runner --dataset apps/workers/workers/qa/datasets/baseline.json

      - name: API smoke test
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: python scripts/smoke_test.py
